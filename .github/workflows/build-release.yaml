name: Build CRX Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    environment: ${{ contains(github.ref_name, 'pre') && 'PRERELEASE' || 'PRODUCTION' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Versions
        uses: actions/github-script@v4
        id: set_version
        with:
          script: |
            const tag = context.ref.substring(10)
            const version = tag.replace('v', '')
            core.setOutput('version', version)

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build Extension
        run: pnpm build
        env:
          EDHS_VERSION: ${{ steps.set_version.outputs.version }}
          EDHS_MODE: ${{ secrets.EDHS_MODE }}

      - name: Zip Artifact
        run: cd dist && zip -r EDHS_${{ github.ref_name }}.zip *

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: ${{ contains(github.ref_name, 'pre') }}
          files: ./dist/EDHS_${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload to Chrome Web Store
      #   uses: mobilefirstllc/cws-publish@latest
      #   with:
      #     action: 'upload'
      #     client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
      #     client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      #     refresh_token: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
      #     extension_id: ${{ secrets.EDHS_EXT_ID }}
      #     zip_file: './dist/EDHS_${{ github.ref_name }}.zip'
